{
    "name": "sidekick-desktop",
    "productName": "SIDEKICK",
    "description": "Scratch 3.0 as a self-contained desktop application; version customized for SIDEKICK.",
    "author": {
        "email": "contact@mixality.de",
        "name": "Mixality"
    },
    "version": "0.1.0",
    "license": "BSD-3-Clause",
    "homepage": "https://menersar.github.io/sidekick-desktop/",
    "repository": {
        "type": "git",
        "url": "https://github.com/Menersar/sidekick-desktop.git"
    },
    "scripts": {
        "build": "cd build-automation && node build.js",
        "fix:ws281x-install": "fix:ws281x-rebuild && git clone https://github.com/jgarff/rpi_ws281x.git && rm -rf node_modules/rpi-ws281x-native/src/rpi_ws281x && cp -r rpi_ws281x node_modules/rpi-ws281x-native/src && rm -rf rpi_ws281x && cd node_modules/rpi-ws281x-native && sudo node-gyp rebuild",
        "fix:ws281x-rebuild": "npm install -g node-gyp",
        "build:test": "electron-builder --dir",
        "postinstall": "npm run fetch && npm run webpack:prod",
        "postinstall2": "npm run install-native-module && npm run fetch && npm run webpack:prod",
        "install-native-module": "cp-cli src-main/static/gpiolib.node ./node_modules/ModuleGpiolib/",
        "release:win": "npx electron-builder --windows nsis --x64 --publish always --config.extraMetadata.sidekick_dist=prod-win-nsis-x64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --windows nsis --ia32 --publish always --config.extraMetadata.sidekick_dist=prod-win-nsis-ia32 --config.extraMetadata.sidekick_update=yes && npx electron-builder --windows nsis --arm64 --publish always --config.extraMetadata.sidekick_dist=prod-win-nsis-arm64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --windows portable --x64 --publish always --config.extraMetadata.sidekick_dist=prod-win-portable-x64 --config.extraMetadata.sidekick_update=yes",
        "release:linux": "npx electron-builder --linux deb --x64 --publish always --config.extraMetadata.sidekick_dist=prod-linux-deb-x64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux deb --arm64 --publish always --config.extraMetadata.sidekick_dist=prod-linux-deb-arm64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux deb --armv7l --publish always --config.extraMetadata.sidekick_dist=prod-linux-deb-armv7l --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux tar.gz --x64 --publish always --config.extraMetadata.sidekick_dist=prod-linux-tar-x64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux tar.gz --arm64 --publish always --config.extraMetadata.sidekick_dist=prod-linux-tar-arm64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux tar.gz --armv7l --publish always --config.extraMetadata.sidekick_dist=prod-linux-tar-armv7l --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux AppImage --x64 --publish always --config.extraMetadata.sidekick_dist=prod-linux-appimage-x64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux AppImage --arm64 --publish always --config.extraMetadata.sidekick_dist=prod-linux-appimage-arm64 --config.extraMetadata.sidekick_update=yes && npx electron-builder --linux AppImage --armv7l --publish always --config.extraMetadata.sidekick_dist=prod-linux-appimage-armv7l --config.extraMetadata.sidekick_update=yes",
        "build:win": "",
        "build:lin": "",
        "build:rpi": "npm run build l arm64 deb",
        "fetch": "node scripts/update-packager.js && node scripts/download-library-files.js && node scripts/download-packager.js && node scripts/prepare-extensions.js",
        "fetch2": "node scripts/download-library-files.js && node scripts/download-packager.js && node scripts/prepare-extensions.js",
        "fetch3": "node scripts/download-packager.js",
        "webpack:compile": "webpack",
        "webpack:watch": "webpack --watch",
        "webpack:prod": "cross-env NODE_ENV=production webpack",
        "electron:start": "electron src-main/entrypoint.js",
        "electron:package:dir": "electron-builder --dir",
        "electron:package:dir:win": "npx electron-builder --windows nsis --x64",
        "electron:package:dir:mac": "npx electron-builder --mac dmg --universal",
        "c": "npx electron-builder --linux deb",
        "electron:package:dir_": "npx electron-builder --dir",
        "//": "postinstall1: node scripts/postinstall.js",
        "dev": "npm run start",
        "start": "mkdirp ./dist && electron-webpack dev",
        "compile": "mkdirp ./dist && electron-webpack",
        "dist": "npm run clean && npm run compile && electron-builder",
        "dist:dir": "npm run compile && electron-builder --dir",
        "clean": "rimraf ./dist ./static/assets",
        "make:icons": "cd build && bash make-icons.sh",
        "webpack:prod2": "set NODE_ENV=production && webpack",
        "webpack:prod1": "cross-env NODE_ENV=production webpack",
        "electron:package:dir4": "npx electron-builder",
        "electron:package:dir2": "electron-builder --windows nsis --x64",
        "electron:package:dir3": "electron-builder --dir",
        "scratch:clean": "rimraf ./dist ./static/assets",
        "scratch:start": "mkdirp ./dist && electron-webpack dev --bail --display-error-details --env.minify=false --no-progress",
        "scratch:compile": "mkdirp ./dist && electron-webpack --bail --display-error-details --env.minify=false --no-progress",
        "scratch:fetch": "rimraf ./static/assets/ && mkdirp ./static/assets/ && node ./scripts/fetchMediaLibraryAssets.js",
        "scratch:build": "npm run build:dev",
        "scratch:build:dev": "npm run compile && npm run doBuild -- --mode=dev",
        "scratch:build:dir": "npm run compile && npm run doBuild -- --mode=dir",
        "scratch:build:dist": "npm run compile && npm run doBuild -- --mode=dist",
        "scratch:doBuild": "node ./scripts/electron-builder-wrapper.js",
        "scratch:scratch:dist": "npm run clean && npm run compile && npm run fetch && npm run doBuild -- --mode=dist",
        "scratch:distDev": "npm run clean && npm run compile && npm run fetch && npm run doBuild -- --mode=dev",
        "scratch:test": "npm run test:lint",
        "scratch:test:lint": "eslint --cache --color --ext .jsx,.js .",
        "scratch:mklink:blocks": "python build-blocks.py",
        "roni": "node roni.js"
    },
    "dependencies": {
        "@simontaga/rpi-ws281x-native": "^1.0.5",
        "bleno": "^0.5.0",
        "lodash": "^4.17.21",
        "native-is-elevated": "^0.7.0",
        "rpi-ws281x-native": "^1.0.4",
        "semver": "^7.5.3",
        "sudo-js": "^1.0.2",
        "sudo-prompt": "^9.2.1",
        "tslib": "^2.6.2"
    },
    "devDependencies": {
        "@babel/core": "^7.23.2",
        "@babel/preset-env": "^7.12.16",
        "@babel/preset-react": "^7.13.13",
        "@electron/notarize": "^2.1.0",
        "adm-zip": "^0.5.10",
        "async-limiter": "^2.0.0",
        "autoprefixer": "^9.8.8",
        "babel-loader": "^8.3.0",
        "copy-webpack-plugin": "^6.4.1",
        "cp-cli": "^2.0.0",
        "cross-env": "^7.0.3",
        "css-loader": "^1.0.1",
        "electron": "^26.2.4",
        "electron-builder": "^24.6.4",
        "file-loader": "2.0.0",
        "postcss": "^8.4.13",
        "postcss-import": "^14.0.0",
        "postcss-loader": "^4.2.0",
        "postcss-simple-vars": "^6.0.3",
        "scratch-gui": "git+https://github.com/Menersar/scratch-gui.git#sidekick",
        "style-loader": "^0.23.0",
        "url-loader": "^4.1.1",
        "webpack": "^4.47.0",
        "webpack-cli": "^4.10.0"
    },
    "bugs": {
        "url": "https://github.com/Menersar/sidekick-desktop/issues",
        "email": "contact@mixality.de"
    },
    "main": "./src-main/entrypoint.js",
    "//": "!!! Oder besser 'de.mixality.sidekick.sidekick-desktop' f√ºr 'appId' setzen? ???",
    "build": {
        "npmRebuild": false,
        "appId": "de.mixality.sidekick-desktop",
        "productName": "SIDEKICK",
        "files": [
            "node_modules/**/*",
            "src-main/**/*",
            "src-main/static/gpiolib.node",
            "!**/src-main/static",
            "src-preload/**/*",
            "src-renderer/**/*",
            "dist-renderer-webpack/**/*",
            "dist-library-files/**/*",
            "dist-extensions/**/*",
            "node_modules/ModuleGpiolib"
        ],
        "extraResources": [
            {
                "from": "art/icon.png",
                "to": "icon.png"
            },
            {
                "from": "src-main/static/gpiolib.node",
                "to": "static/gpiolib.node"
            },
            {
                "from": "src-main/windows/ws281x-control.js",
                "to": "static/ws281x-control.js"
            }
        ],
        "win": {
            "artifactName": "${productName} Portable ${version} ${arch}.${ext}",
            "icon": "build/icon.ico",
            "target": [
                {
                    "target": "nsis",
                    "arch": "x64"
                },
                {
                    "target": "portable",
                    "arch": "x64"
                }
            ]
        },
        "appx": {
            "artifactName": "${productName} MS Store ${version} ${arch}.${ext}",
            "applicationId": "SIDEKICK",
            "displayName": "SIDEKICK",
            "identityName": "Mixality.SIDEKICKDesktop",
            "publisher": "CN=5b744553-b6ec-446a-aa4e-d77024aa8c74",
            "publisherDisplayName": "Mixality",
            "backgroundColor": "#5ea82d",
            "showNameOnTiles": true,
            "languages": [
                "en-US",
                "de"
            ]
        },
        "nsis": {
            "artifactName": "${productName} Setup ${version} ${arch}.${ext}",
            "oneClick": false,
            "deleteAppDataOnUninstall": true,
            "allowToChangeInstallationDirectory": true
        },
        "mac": {
            "artifactName": "${productName} Setup ${version}.${ext}",
            "icon": "build/icon.icns",
            "category": "public.app-category.education",
            "darkModeSupport": true,
            "gatekeeperAssess": false,
            "hardenedRuntime": true,
            "entitlements": "build/entitlements.mac.plist",
            "entitlementsInherit": "build/entitlements.mac.plist",
            "extendInfo": {
                "ITSAppUsesNonExemptEncryption": false,
                "LSMultipleInstancesProhibited": true,
                "NSCameraUsageDescription": "This app requires camera access when using the video sensing blocks.",
                "NSMicrophoneUsageDescription": "This app requires microphone access when recording sounds or detecting loudness."
            },
            "target": [
                {
                    "arch": "universal",
                    "target": "dmg"
                }
            ]
        },
        "mas": {
            "hardenedRuntime": false,
            "entitlements": "build/entitlements.mas.plist",
            "entitlementsInherit": "build/entitlements.mas.inherit.plist",
            "provisioningProfile": "build/distribution.provisionprofile"
        },
        "masDev": {
            "type": "development",
            "provisioningProfile": "build/development.provisionprofile"
        },
        "linux": {
            "artifactName": "${productName}-${os}-${arch}-${version}.${ext}",
            "icon": "./build/",
            "synopsis": "Assistance system for the manual assembly utilizing the Scratch programming interface to create workflows.",
            "description": "SIDEKICK is based on Scratch and features of the Scratch mod TurboWarp. SIDEKICK serves as an assistance system tool to support people with disabilities in procedural workflows by displaying instructions for individual work steps. Workflows can be created via the Scratch programming interface.",
            "category": "Development",
            "extraFiles": [
                "linux-files"
            ],
            "target": [
                {
                    "target": "deb"
                },
                {
                    "target": "appimage"
                },
                {
                    "target": "tar.gz"
                }
            ]
        },
        "snap": {
            "summary": "Assistance system for the manual assembly utilizing the Scratch programming interface to create workflows.",
            "allowNativeWayland": true,
            "plugs": [
                "default",
                "camera",
                "audio-playback",
                "audio-record",
                "joystick",
                "removable-media"
            ]
        },
        "appImage": {
            "license": null
        },
        "fileAssociations": [
            {
                "ext": "sb3",
                "name": "Scratch 3 Project",
                "role": "Editor",
                "mimeType": "application/x.scratch.sb3"
            },
            {
                "ext": "sb2",
                "name": "Scratch 2 Project",
                "role": "Editor",
                "mimeType": "application/x.scratch.sb2"
            },
            {
                "ext": "sb",
                "name": "Scratch 1 Project",
                "role": "Editor",
                "mimeType": "application/x.scratch.sb"
            }
        ],
        "publish": [
            {
                "provider": "github",
                "repo": "sidekick-desktop",
                "owner": "Menersar"
            }
        ],
        "afterSign": "scripts/after-sign.js"
    },
    "private": true
}
